{"ast":null,"code":"export const Deck = {\n  async creerPaquet() {\n    const response = await fetch(\"https://deckofcardsapi.com/api/deck/new/draw/?count=52\");\n    const data = await response.json();\n    return data.cards.map(card => ({\n      code: card.code,\n      image: card.image,\n      faceVisible: false,\n      // Default to face down\n      value: card.value\n    }));\n  },\n  async tirerCartes(deck_id) {\n    try {\n      // Tire 52 cartes du paquet créé\n      const reponse = await fetch(`https://deckofcardsapi.com/api/deck/${deck_id}/draw/?count=52`);\n      const donnees = await reponse.json();\n      console.log('Donnees', donnees);\n\n      // Vérifie si les cartes sont présentes dans la réponse\n      if (donnees.cards) {\n        // Récupère les codes des cartes\n        return donnees.cards.map(carte => carte);\n      } else {\n        throw new Error(\"Erreur lors de la récupération des cartes.\");\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération des cartes :\", error);\n      return []; // Retourne un tableau vide en cas d'erreur\n    }\n  }\n};","map":{"version":3,"names":["Deck","creerPaquet","response","fetch","data","json","cards","map","card","code","image","faceVisible","value","tirerCartes","deck_id","reponse","donnees","console","log","carte","Error","error"],"sources":["C:/Users/sameh/OneDrive/Documents/Desktop/Horloge2/travail22025/src/JeuxHorloge/Deck.tsx"],"sourcesContent":["import { CarteH } from \"./Types\";\n\nexport interface Cartes {\n    valeur: string;\n    couleur: string;\n  }\n  \n  export const Deck = {\n    async creerPaquet(): Promise<CarteH[]> {\n  const response = await fetch(\"https://deckofcardsapi.com/api/deck/new/draw/?count=52\");\n  const data = await response.json();\n  return data.cards.map((card: any) => ({\n    code: card.code,\n    image: card.image,\n    faceVisible: false, // Default to face down\n    value: card.value\n  }));\n},\n  \n    async tirerCartes(deck_id: string): Promise<CarteH[]> {\n      try {\n        // Tire 52 cartes du paquet créé\n        const reponse = await fetch(\n          `https://deckofcardsapi.com/api/deck/${deck_id}/draw/?count=52`\n        );\n        const donnees = await reponse.json();\n\n        console.log('Donnees',donnees)\n  \n        // Vérifie si les cartes sont présentes dans la réponse\n        if (donnees.cards) {\n          // Récupère les codes des cartes\n          return donnees.cards.map((carte: any) => carte);\n        } else {\n          throw new Error(\"Erreur lors de la récupération des cartes.\");\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des cartes :\", error);\n        return []; // Retourne un tableau vide en cas d'erreur\n      }\n    },\n  };\n  \n  "],"mappings":"AAOE,OAAO,MAAMA,IAAI,GAAG;EAClB,MAAMC,WAAWA,CAAA,EAAsB;IACzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wDAAwD,CAAC;IACtF,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,KAAK,CAACC,GAAG,CAAEC,IAAS,KAAM;MACpCC,IAAI,EAAED,IAAI,CAACC,IAAI;MACfC,KAAK,EAAEF,IAAI,CAACE,KAAK;MACjBC,WAAW,EAAE,KAAK;MAAE;MACpBC,KAAK,EAAEJ,IAAI,CAACI;IACd,CAAC,CAAC,CAAC;EACL,CAAC;EAEG,MAAMC,WAAWA,CAACC,OAAe,EAAqB;IACpD,IAAI;MACF;MACA,MAAMC,OAAO,GAAG,MAAMZ,KAAK,CACzB,uCAAuCW,OAAO,iBAChD,CAAC;MACD,MAAME,OAAO,GAAG,MAAMD,OAAO,CAACV,IAAI,CAAC,CAAC;MAEpCY,OAAO,CAACC,GAAG,CAAC,SAAS,EAACF,OAAO,CAAC;;MAE9B;MACA,IAAIA,OAAO,CAACV,KAAK,EAAE;QACjB;QACA,OAAOU,OAAO,CAACV,KAAK,CAACC,GAAG,CAAEY,KAAU,IAAKA,KAAK,CAAC;MACjD,CAAC,MAAM;QACL,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;MAC/D;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;MACnE,OAAO,EAAE,CAAC,CAAC;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}